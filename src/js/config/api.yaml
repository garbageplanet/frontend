openapi: 3.0.0
servers:
  - description: Mock server
    url: https://virtserver.swaggerhub.com/adriennn/garbageplanet/1.0.0
  - description: Live server
    url: https://api.garbagepla.net
info:
  description: |
    This is the public map feature api for Garbageplanet. You can find out more on our [website](https://garbagepla.net).
  version: "1.0.0"
  title: Garbagepla.net Public API
  termsOfService: 'http://garbagepla.net/#/terms/'
  contact:
    email: info@garbagepla.net
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: feature
    description: Find and add map features
paths:
  /feature/{FeatureType}:
    post:
      tags:
        - feature
      summary: Add a new feature to the map
      operationId: addFeature
      parameters:
        - name: FeatureType
          in: path
          description: The feature type collection to be queried, one of [ litter, garbage, area, cleaning, link ]
          required: true
          schema: 
            $ref: '#/components/schemas/FeatureType'
      responses:
        '405':
          description: Invalid input
        '200':
          description: Ok
        '404':
          description: Not found
      security:
        - api_key: []
      requestBody:
        required: true
        description: A JSON object that contains all the required feature options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
  /feature/{FeatureType}/findByTags:
    get:
      tags:
        - feature
      summary: Finds features by tags
      description: Separate mulitple tags with commas
      operationId: findFeaturesByTags
      parameters:
        - name: FeatureType
          in: path
          description: The feature type collection to be queried, one of [ litter, garbage, area, cleaning, link ]
          required: true
          schema: 
            $ref: '#/components/schemas/FeatureType'
        - name: tags
          in: query
          description: Tags to be used in filtering the given feature collection. Sepearate multiple values by comma or single space.
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '400':
          description: Invalid tag value
      security:
        - api_key: []
  /feature/{FeatureType}/findByBbox:
    get:
      tags:
        - feature
      summary: Finds features by bounding box
      description: Finds all features of given type with the queried bounding box
      operationId: findFeaturesByBoundingBox
      parameters:
        - name: FeatureType
          in: path
          description: The feature type collection to be queried, one of [ litter, garbage, area, cleaning, link ]
          required: true
          schema: 
            $ref: '#/components/schemas/FeatureType'
        - name: bbox
          in: query
          description: The format of the bounding box follows openstreetmap's nominatim definition, which is  [ left,bottom,right,top ] or [ min lon,min lat,max lon,max lat ]
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '400':
          description: Invalid bounding box value
      security:
        - api_key: []
  /feature/{FeatureType}/findByPoly:
    get:
      tags:
        - feature
      summary: Finds features by a bounding polygon
      description: Finds all features of given type with the queried polygon
      operationId: findFeaturesByPolygon
      parameters:
        - name: FeatureType
          in: path
          description: The feature type collection to be queried, one of [ litter, garbage, area, cleaning, link ]
          required: true
          schema: 
            $ref: '#/components/schemas/FeatureType'
        - name: poly
          in: query
          description: The format of the polygon follow postGIS notation and can be either open or closed.The maximum amount of points in the polygon is 100. If there are more points, the polygon will be automatically simplified using the Douglas-Peucker algorithm in postGIS, ST_simplify().
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '400':
          description: Invalid polygon value
      security:
        - api_key: []
  '/feature/{FeatureType}/{featureId}':
    get:
      tags:
        - feature
      summary: Find feature by id
      description: Returns a single feature
      operationId: getPetById
      parameters:
        - name: FeatureType
          in: path
          description: The feature type collection to be queried, one of [ litter, garbage, area, cleaning, link ]
          required: true
          schema: 
            $ref: '#/components/schemas/FeatureType'
        - name: featureId
          in: path
          description: Id of feature to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '400':
          description: Invalid id supplied
        '404':
          description: Feature not found
      security:
        - api_key: []
components:
  schemas:
    FeatureType:
      type: string
      example: garbage
      enum:
      - garbage
      - litter
      - link
      - area
      - cleaning
    FeatureOptions:
      type: object
      properties:
        prop1:
          name: amount
          type: integer
          format: int64
          example: 3
        prop2:
          name: todo
          type: integer
          format: int64
          example: 2
        prop3:
          name: latlng
          type: string
          format: utf-8
          example: "87.00, 78.22"
        prop4:
          name: 
          type: string
          format: utf-8
          example: 
        "...":
          name: ...
          type: ...
      example: {
        amount: 1,
        todo: 2,
        image_url: https://imgur.com,
        latlng: "90.0001,12.999"
      }
    Tag:
      type: object
      properties:
        values:
          type: array
    Feature:
      type: object
      required:
        - type
        - options
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/FeatureType'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        options:
          type: object
          items:
            $ref: '#/components/schemas/FeatureOptions'
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    Feature:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Feature'
      description: A map feature
      required: true
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header